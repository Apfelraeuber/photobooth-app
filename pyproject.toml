[project]
name = "photobooth app"
requires-python = ">=3.9"
version = "0.0.1"
description = "Photobooth app written in Python supporting DSLR, picamera2, webcameras"
authors = [{ name = "Michael G", email = "me@mgrl.de" }]
maintainers = [{ name = "Michael G", email = "me@mgrl.de" }]
readme = "README.md"
license = { file = "LICENSE.md" }
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Multimedia :: Graphics",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera"
]
keywords = [
  "photobooth",
  "raspberry-pi",
  "camera",
  "python",
  "filter",
  "gphoto2",
  "dslr",
  "picamera2"
]

[project.urls]
Homepage = "https://github.com/mgrl/photobooth-app"
Repository = "https://github.com/mgrl/photobooth-app"
"Bug Tracker" = "https://github.com/mgrl/photobooth-app/issues"


[tool.poetry]
name = "photobooth app"
version = "0.0.1"
description = "Photobooth app written in Python supporting DSLR, picamera2, webcameras"
authors = ["Michael G <me@mgrl.de>"]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
fastapi = "^0.95.2"
# https://github.com/boppreh/keyboard/issues/420#issuecomment-1364100975
keyboard = {git = "https://github.com/boppreh/keyboard"}
opencv-python = "^4.7.0.72"
piexif = "^1.1.3"
pillow = "^9.5.0"
psutil = "^5.9.5"
pydantic = "^1.10.8"
pymitter = "^0.4.0"
pyturbojpeg = "^1.7.1"
requests = "^2.31.0"
sse-starlette = "^1.6.1"
uvicorn = "^0.22.0"
python-dotenv = "^1.0.0"
pyserial = "^3.5"
jsonref = "^1.1.0"
dependency-injector = "^4.41.0"
pilgram2 = "^2.0.2"
v4l2py = {version = "^2.2.1", platform = "linux"}
gpiozero = {version = "^1.6.2", platform = "linux"}
gphoto2 = {version = "^2.3.4", platform = "linux"}


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-benchmark = "^4.0.0"
pytest-cov = "^4.0.0"
ruff = "^0.0.270"
httpx-sse = "^0.3.1"
httpx = "^0.24.1"
simplejpeg = "^1.6.6"
coverage = {extras = ["toml"], version = "^7.2.7"}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.coverage.run]
# disable couldnt-parse: https://github.com/nedbat/coveragepy/issues/1392
disable_warnings = ["couldnt-parse"]
omit = [
    "install.py",
    "test_*.py",
    "./tests/*"
    ]
parallel = true
concurrency = ["thread","multiprocessing"]

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120
select = [
  "E",   # pycodestyle
  "W",   # pycodestyle
  "F",   # pyflakes
  "B",   # bugbear
  "UP",  # pyupgrade
  "I",   # isort
  #"D",   # pydocstyle   # add later
]
ignore = [
  "B008" #used for DI injection
  ]
extend-exclude = ["./scripts", "install.py"]

[tool.ruff.per-file-ignores]
"photobooth/appconfig.py" = ["E501"]

[tool.ruff.pydocstyle]
convention = "google"