"use strict";(globalThis["webpackChunkqPhotobooth"]=globalThis["webpackChunkqPhotobooth"]||[]).push([[181],{3181:(e,o,l)=>{l.r(o),l.d(o,{default:()=>z});var t=l(9835),r=l(6970);const n={class:"q-mt-md row justify-center"},a={class:"col-12 col-md-8 q-mb-xl"},s={class:"text-h5"},i={class:"col-12 col-md-8 q-mb-xl"},c={class:"q-gutter-sm"};function u(e,o,l,u,m,g){const p=(0,t.up)("q-tab"),d=(0,t.up)("q-tabs"),f=(0,t.up)("q-separator"),b=(0,t.up)("BlitzForm"),v=(0,t.up)("q-btn"),h=(0,t.up)("q-page-sticky"),y=(0,t.up)("q-page");return(0,t.wg)(),(0,t.j4)(y,{padding:""},{default:(0,t.w5)((()=>[(0,t.Wm)(d,{modelValue:u.selected_group,"onUpdate:modelValue":o[0]||(o[0]=e=>u.selected_group=e),class:"text-grey","active-color":"secondary","indicator-color":"secondary","mobile-arrows":"",align:"justify"},{default:(0,t.w5)((()=>[((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(u.main_groups,(e=>((0,t.wg)(),(0,t.j4)(p,{key:e,label:e,name:e},null,8,["label","name"])))),128))])),_:1},8,["modelValue"]),(0,t.Wm)(f),(0,t._)("div",n,[(0,t._)("div",a,[(0,t._)("div",s,(0,r.zw)(u.group_title),1),(0,t._)("p",null,(0,r.zw)(u.group_description),1)]),(0,t._)("div",i,[u.renderBlitzForm?((0,t.wg)(),(0,t.j4)(b,{modelValue:u.serverConfig[u.selected_group],"onUpdate:modelValue":o[1]||(o[1]=e=>u.serverConfig[u.selected_group]=e),key:u.selected_group,schema:u.schema_blitzar,internalLabels:!1,"label-position":"left",class:"blitzar-form"},null,8,["modelValue","schema"])):(0,t.kq)("",!0)])]),(0,t.Wm)(h,{position:"bottom-right",offset:[25,25]},{default:(0,t.w5)((()=>[(0,t._)("div",c,[(0,t.Wm)(v,{label:"reset",onClick:o[2]||(o[2]=e=>u.remoteProcedureCall("/config/reset"))}),(0,t.Wm)(v,{label:"restore",onClick:o[3]||(o[3]=e=>u.getConfig("current"))}),(0,t.Wm)(v,{color:"primary",label:"persist",onClick:o[4]||(o[4]=e=>u.uploadConfigAndPersist())})])])),_:1})])),_:1})}l(8964),l(6727),l(9665);var m=l(499),g=l(1569),p=l(9302),d=l(6380);const f={components:{BlitzForm:d.lU,BlitzListForm:d.$C},setup(){const e=(0,p.Z)(),o=(0,m.iH)({});let l={};const r=(0,m.iH)([]),n=(0,m.iH)(!1),a=(0,m.iH)(""),s=(0,t.Fl)((()=>""!=a.value?l[a.value]["allOf"][0]["title"]:"-")),i=(0,t.Fl)((()=>""!=a.value?l[a.value]["allOf"][0]["description"]:"-")),c=(0,t.Fl)((()=>""!=a.value?u(l[a.value]):[])),u=e=>{const o=e=>e.replace(/[&<>'"]/g,(e=>({"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"}[e]))),l=(e,l)=>{let t={id:e,label:l["title"],component:"QInput",filled:!0};return"boolean"==l["type"]&&(t["component"]="QToggle"),"integer"!=l["type"]&&"float"!=l["type"]||(t["component"]="QInput",l["ui_component"]&&(t["component"]=l["ui_component"]),t["type"]="number",t["labelAlways"]=!0,l["exclusiveMinimum"]&&(t["min"]=l["exclusiveMinimum"]),l["exclusiveMaximum"]&&(t["max"]=l["exclusiveMaximum"]),l["minimum"]&&(t["min"]=l["minimum"]),l["maximum"]&&(t["max"]=l["maximum"])),l["allOf"]&&Object.keys(l["allOf"][0]).includes("enum")&&(t["component"]="QSelect",t["options"]=l["allOf"][0]["enum"]),t["subLabel"]=`${l["description"]||""} (default=${o(("default"in l?l["default"]:"undefined").toString())})`,t};console.log("creating blitzar schema"),console.log(e);let t=[];return"allOf"in e?Object.entries(e["allOf"][0]["properties"]).forEach((e=>{const[o,r]=e;let n=l(o,r);"array"==r["type"]&&r["items"]&&(n["component"]="BlitzListForm",n["schema"]=[],Object.entries(r["items"]["properties"]).forEach((e=>{const[o,t]=e;n["schema"].push(l(o,t))}))),t.push(n)})):console.log("error, wrong format!, no direct props on main level"),console.log(t),t},d=()=>{g.api.get("/config/schema?schema_type=dereferenced").then((async e=>{console.log(e.data),l=e.data.properties,r.value=Object.keys(l),a.value=r.value[0]})).catch((o=>{console.log(o),console.log("error"),e.notify({message:"error getting scheme! check logs",color:"red"})}))},f=(l="current")=>{n.value=!1,g.api.get(`/config/${l}`).then((async t=>{console.log(t.data),console.log(o.value),o.value=t.data,n.value=!0,e.notify({message:`${l} config loaded from server`,color:"green"})})).catch((o=>{console.log(o),console.log("error"),e.notify({message:"error getting config!",color:"red"})}))};d(),f("currentActive");const b=()=>{console.log("sync config to server"),console.log(o.value),g.api.post("/config/current",o.value).then((o=>{e.notify({message:"Persisted config, trying to restart service",color:"green"}),console.log(o)})).catch((o=>{if(o.response.data.detail){let l="check following fields:<br/>";return Object.values(o.response.data.detail).forEach((e=>{l+=e["loc"].join(" -> "),l+=`: ${e["msg"]}`,l+="<br/>"})),void e.notify({caption:"validation error",icon:"error",html:!0,message:`${l}`,color:"red"})}e.notify({message:"error saving config, check browser console and logs",color:"red"})}))};return(0,t.wF)((()=>console.log("Composition API beforemounted"))),(0,t.bv)((()=>console.log("Composition API mounted"))),{schema_blitzar:c,renderBlitzForm:n,main_groups:r,group_title:s,group_description:i,selected_group:a,serverConfig:o,remoteProcedureCall:g.remoteProcedureCall,getConfig:f,uploadConfigAndPersist:b}}};var b=l(1639),v=l(9885),h=l(7817),y=l(7661),_=l(926),w=l(627),C=l(8879),k=l(9984),q=l.n(k);const x=(0,b.Z)(f,[["render",u]]),z=x;q()(f,"components",{QPage:v.Z,QTabs:h.Z,QTab:y.Z,QSeparator:_.Z,QPageSticky:w.Z,QBtn:C.Z})}}]);